#+LaTeX_CLASS: article-mine
#+LATEX_HEADER: % To change the background color of verbatim sections in latex
#+LATEX_HEADER: \colorlet{LightSteelBlue10}{LightSteelBlue1!50}
#+LATEX_HEADER: \colorlet{SteelBlue40}{SteelBlue4!60!black}
#+LATEX_HEADER: \newcommand{\verbStyle}[1]{{\color{SteelBlue40}\colorbox{LightSteelBlue10}{{#1}}}}
#+LATEX_HEADER: \let\OldTexttt\texttt
#+LATEX_HEADER: \renewcommand{\texttt}[1]{\OldTexttt{\verbStyle{#1}}}
#+OPTIONS: toc:nil
#+TITLE: Instructions 
#+Author: Yu-Ping Yang
#+Date: December 20, 2017

- The following five files will be output from the interface (under =inputs/= directory):
  + =eweld.in=
  + =eweld_weld_parameters.in=
  + =eweld_boundary_condition.in=
  + =eweld_preheat_interpass_temperature.in=
  + =eweld_temperature_monitor.in=
  + =eweld_mesh_key.txt= (Not need to do now. This option will allow users to input their own meshes. )

- For automatic mesh, the following steps will be run:
  1. Check if =pass_coordinates.out= exists in =input= directory, if no, run \\ 
	 =utils/determine_passes_arc_v4.exe= to create =inputs/pass_coordinates.out=[fn:1]:
	 #+BEGIN_EXAMPLE
	 ./utils/determine_passes_arc_v4.out inputs/
	 #+END_EXAMPLE
	 =eweld.in= will be input.
  2. Run =utils/Automesh_v14.py= from SALOME's Python Console to create =Mesh_3D.unv=, or run 
	 without Salome GUI:
	 #+BEGIN_EXAMPLE
	 $SALOMEPATH/salome start -t -w 1 utils/Automesh_v14.py
	 #+END_EXAMPLE
	 1) The files will be input:
		- =./inputs/eweld.in=
		- =./inputs/eweld_weld_parameters.in=
		- =./setting/Setting_arc_efficiency_dfault.in=
		- =./inputs/pass_coordinates.out=
		  
	 2) The files will be output: 
		- =Mesh_3D.unv=
		- =model_dflux.for=
		- =model_step1.in=
  3. Run 
	 #+BEGIN_EXAMPLE
	 python2 tools/unv2calculix.py Mesh_3D.unv Model3d
	 #+END_EXAMPLE
	 =Model3d.inp= will be created.
  4. To generate the =model_film.in= file (using cgx and unical), run:
	 #+BEGIN_EXAMPLE
	 ./utils/createFilm.sh Mesh_3D.unv ./utils/write_film.fbd model_film.in 
	 #+END_EXAMPLE
  5. Run 
	 #+BEGIN_EXAMPLE
	 python2 utils/Analysis_file_create.py 
	 #+END_EXAMPLE
	 + The files will be input:
	   - =./inputs/eweld.in=
	   - =./inputs/eweld_boundary_condition.in=
	   - =./inputs/eweld_preheat_interpass_temperature.in= 
	   - =./Model3d.inp=
	 + The files will be output:
	   - =model_bc.in=
	   - =model_ele4.in=
	   - =model_ele6.in=
	   - =model_ele8.in=
	   - =model_group.in=
	   - =model_ini_temperature.in=
	   - =model_material.in=
	   - =model_node.in=
  6. Move =model_dflux.for= to the CalculiX directory (to =CalculiX-PW/src/=) and rename to =dflux.f=, and compile CalculiX
	 (see the notes in =CalculiX-PW/README.md= for compilation/installation of CalculiX).
	 Or uncompress =tools/CalculiX-PW.tar= (works under Ubuntu 14.04, if all the required packages for CalculiX are installed):
	 #+BEGIN_EXAMPLE
	 tar -xf tools/CalculiX-PW.tar
	 #+END_EXAMPLE
  7. Run =analysis.inp= with CalculiX

* Footnotes

[fn:1] On Linux, compile 	 =determine_passes_arc_v4.out=, to get =determine_passes_arc_v4.out= via =gfortran determine_passes_arc_v4.for -o determine_passes_arc_v4.out=


